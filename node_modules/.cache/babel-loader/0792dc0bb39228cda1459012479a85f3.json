{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chloe\\\\OneDrive\\\\Bureau\\\\Projets\\\\CUSTOM HOOKS\\\\v2\\\\src\\\\components\\\\NewTask\\\\NewTask.js\",\n    _s = $RefreshSig$();\n\nimport Section from \"../UI/Section\";\nimport TaskForm from \"./TaskForm\";\nimport useHttp from \"../../hooks/useHttp\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NewTask = props => {\n  _s();\n\n  const {\n    isLoading,\n    error,\n    sendRequest: sendTaskRequest\n  } = useHttp();\n\n  const createTask = (taskText, taskData) => {\n    const generatedId = taskData.name; // firebase-specific => \"name\" contains generated id\n\n    const createdTask = {\n      id: generatedId,\n      text: taskText\n    };\n    props.onAddTask(createdTask);\n  };\n\n  const enterTaskHandler = async taskText => {\n    sendTaskRequest({\n      url: \"https://custom-hooks-820e5-default-rtdb.europe-west1.firebasedatabase.app/tasks.json\",\n      method: \"POST\",\n      body: {\n        text: taskText\n      },\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }, // bind allows us to 'pre-configure' a function. It does NOT execute the function right away. Here, it will pre-configure createTask. The first argument in the bind function allows you to set the 'this' keyword in the to-be-executed function. Here, it doesn't matter so we set it to \"null\".\n    // The second argument we pass will then be the first argument received by that to-be-called function.\n    // createTask will STILL receive the taskData argument, because bellow is only our pre-configured function. Any other argument which might be passed by the place where the function is then actually being called (here it happends in useHttp, line 22 : applyData(data)), will simply be appended to the end of the parameter list.\n    // So the data we pass to applyData as the only argument (applyData(data)) in the custom hook will be appended as a second argument on createTask because of us calling bind.\n    createTask.bind(null, taskText));\n  };\n\n  return /*#__PURE__*/_jsxDEV(Section, {\n    children: [/*#__PURE__*/_jsxDEV(TaskForm, {\n      onEnterTask: enterTaskHandler,\n      loading: isLoading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n\n_s(NewTask, \"e+CZgtYWzn/WEePX8yQWKpC3/rg=\", false, function () {\n  return [useHttp];\n});\n\n_c = NewTask;\nexport default NewTask;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewTask\");","map":{"version":3,"names":["Section","TaskForm","useHttp","NewTask","props","isLoading","error","sendRequest","sendTaskRequest","createTask","taskText","taskData","generatedId","name","createdTask","id","text","onAddTask","enterTaskHandler","url","method","body","headers","bind"],"sources":["C:/Users/chloe/OneDrive/Bureau/Projets/CUSTOM HOOKS/v2/src/components/NewTask/NewTask.js"],"sourcesContent":["import Section from \"../UI/Section\";\nimport TaskForm from \"./TaskForm\";\n\nimport useHttp from \"../../hooks/useHttp\";\n\nconst NewTask = (props) => {\n  const { isLoading, error, sendRequest: sendTaskRequest } = useHttp();\n\n  const createTask = (taskText, taskData) => {\n    const generatedId = taskData.name; // firebase-specific => \"name\" contains generated id\n    const createdTask = { id: generatedId, text: taskText };\n\n    props.onAddTask(createdTask);\n  };\n\n  const enterTaskHandler = async (taskText) => {\n    sendTaskRequest(\n      {\n        url: \"https://custom-hooks-820e5-default-rtdb.europe-west1.firebasedatabase.app/tasks.json\",\n        method: \"POST\",\n        body: { text: taskText },\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      },\n      // bind allows us to 'pre-configure' a function. It does NOT execute the function right away. Here, it will pre-configure createTask. The first argument in the bind function allows you to set the 'this' keyword in the to-be-executed function. Here, it doesn't matter so we set it to \"null\".\n      // The second argument we pass will then be the first argument received by that to-be-called function.\n      // createTask will STILL receive the taskData argument, because bellow is only our pre-configured function. Any other argument which might be passed by the place where the function is then actually being called (here it happends in useHttp, line 22 : applyData(data)), will simply be appended to the end of the parameter list.\n      // So the data we pass to applyData as the only argument (applyData(data)) in the custom hook will be appended as a second argument on createTask because of us calling bind.\n      createTask.bind(null, taskText )\n    ); \n  };\n\n  return (\n    <Section>\n      <TaskForm onEnterTask={enterTaskHandler} loading={isLoading} />\n      {error && <p>{error}</p>}\n    </Section>\n  );\n};\n\nexport default NewTask;\n"],"mappings":";;;AAAA,OAAOA,OAAP,MAAoB,eAApB;AACA,OAAOC,QAAP,MAAqB,YAArB;AAEA,OAAOC,OAAP,MAAoB,qBAApB;;;AAEA,MAAMC,OAAO,GAAIC,KAAD,IAAW;EAAA;;EACzB,MAAM;IAAEC,SAAF;IAAaC,KAAb;IAAoBC,WAAW,EAAEC;EAAjC,IAAqDN,OAAO,EAAlE;;EAEA,MAAMO,UAAU,GAAG,CAACC,QAAD,EAAWC,QAAX,KAAwB;IACzC,MAAMC,WAAW,GAAGD,QAAQ,CAACE,IAA7B,CADyC,CACN;;IACnC,MAAMC,WAAW,GAAG;MAAEC,EAAE,EAAEH,WAAN;MAAmBI,IAAI,EAAEN;IAAzB,CAApB;IAEAN,KAAK,CAACa,SAAN,CAAgBH,WAAhB;EACD,CALD;;EAOA,MAAMI,gBAAgB,GAAG,MAAOR,QAAP,IAAoB;IAC3CF,eAAe,CACb;MACEW,GAAG,EAAE,sFADP;MAEEC,MAAM,EAAE,MAFV;MAGEC,IAAI,EAAE;QAAEL,IAAI,EAAEN;MAAR,CAHR;MAIEY,OAAO,EAAE;QACP,gBAAgB;MADT;IAJX,CADa,EASb;IACA;IACA;IACA;IACAb,UAAU,CAACc,IAAX,CAAgB,IAAhB,EAAsBb,QAAtB,CAba,CAAf;EAeD,CAhBD;;EAkBA,oBACE,QAAC,OAAD;IAAA,wBACE,QAAC,QAAD;MAAU,WAAW,EAAEQ,gBAAvB;MAAyC,OAAO,EAAEb;IAAlD;MAAA;MAAA;MAAA;IAAA,QADF,EAEGC,KAAK,iBAAI;MAAA,UAAIA;IAAJ;MAAA;MAAA;MAAA;IAAA,QAFZ;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAMD,CAlCD;;GAAMH,O;UACuDD,O;;;KADvDC,O;AAoCN,eAAeA,OAAf"},"metadata":{},"sourceType":"module"}